import './App.css';

function Card(props) {

  console.log(props.heading);

  return (
    <div className="flex flex-col gap-8">
      <div className="mx-32 border rounded-xl p-4 border-[#9c9c9e] flex flex-col gap-3">
        <h2 className="text-3xl font-bold  text-[#23272F]">{props.heading}</h2>
        <h3 className="font-medium  text-[#9c9c9e]">December 5, 2024</h3>
        <p className="font-medium">
          A common use case in React apps is to perform a data mutation and then
          update state in data mutation and then update response...
        </p>
      </div>
    </div>
  );
}

function Navbar(){
  return (
    <main className='flex justify-evenly items-center h-16'>
      <div>
        <span className='font-medium'>v19</span>
      </div>
      <div>
        <input className='w-[30rem] h-8 rounded-full sticky top-0 border border-black' />
      </div>
      <div className='flex gap-8 font-medium'>
        <a>Learn</a>
        <a>Reference</a>
        <a>Community</a>
        <a>Blog</a>
      </div>
      <div></div>
    </main>
  )
}

function App() {
  return (
    <main>
      <Navbar/>
    
      <div className="mx-32 my-20">
        <h1 className="text-[40px] font-bold text-[#23272F]">React Blog</h1>
        <p className="my-4 text-[#23272F] text-[20px] font-medium">
          This blog is the official source for the updates from the React team.
          Anything important, including release notes or deprecation notices,
          will be posted here first. You can also follow the{' '}
          <span className="text-[#087ea4]">@reactjs</span> account on Twitter,
          but you wonâ€™t miss anything essential if you only read this blog.
        </p>
      </div>

      {/* div for card */}

      <div className="flex flex-col gap-4">
        <Card heading="React v19" />
        <Card heading="React Compiler Beta Release" />
       
      </div>
    </main>
  );
}

export default App;

// props => key = value

//  <div className='mx-32 border rounded-xl p-4 border-[#9c9c9e] flex flex-col gap-3'>
//   <h2 className='text-3xl font-bold  text-[#23272F]'>React Compiler Beta Release</h2>
//   <h3 className='font-medium  text-[#9c9c9e]'>December 9, 2025</h3>
//   <p className='font-medium'>A common use case in React apps is to perform a data mutation and then update state in data mutation and then update response...</p>
//   </div>

//NOTE PROPS => props are used to pass data in only one direction => FROM PARENT TO CHILD


//list rendering
function App() {
  const arr = ['Grapes', 'Mango', 'Orange', 'Watermelon'];
  return (
    <div>
      
      {arr.map((fruit,index) => (
        <p className="text-3xl font-bold">{`${index} ${fruit}`}</p>
      ))}

      {/* <p>{arr[0]}</p>
    <p>{arr[1]}</p>
    <p>{arr[2]}</p>
    <p>{arr[3]}</p> */}
    </div>
  );
}

export default App;


import { useState } from 'react';

function App() {
  //call the useState
  console.log(useState('ritesh'));

  const [firstname, setFirstName] = useState('ritesh');
  const [inputValue, setInputValue] = useState('');

  const handleClick = () => {
    setFirstName('laskhit');
  };

  const handleChange = (e) => {
    console.log(e.target.value);
    setInputValue(e.target.value);
  };

  return (
    <div className="mx-20 my-10">
      <button
        onClick={handleClick}
        className="px-8 py-2 bg-blue-300 text-white"
      >
        Click
      </button>

      <input
        onChange={handleChange}
        className="w-96 border border-black rounded-md p-4 m-3"
        placeholder="Enter the text"
      />
      <p>{firstname}</p>
      <p>{inputValue}</p>
    </div>
  );
}

export default App;



//lifting the state up .
//create header and a footer component
import { useState } from 'react';

function Header({ setInputValue }) {
  const handleChange = (e) => {
    setInputValue(e.target.value);
  };
  return (
    <div className="h-16 border mx-20 my-10 border-black bg-red-200 flex">
      <input
        onChange={handleChange}
        className="w-64 p-2 m-2 border border-black rounded-lg"
        placeholder="Enter some text...."
      />
    </div>
  );
}

function Footer({ inputValue }) {
  return (
    <div className="h-16 border mx-20 border-black my-20 bg-blue-200">
      <p className='p-3'>{inputValue}</p>
    </div>
  );
}

function App() {
  const [inputValue, setInputValue] = useState('');

  return (
    <div className="bg-yellow-200 p-20">
      <Header setInputValue={setInputValue} />
      <Footer inputValue={inputValue} />
    </div>
  );
}

export default App;
